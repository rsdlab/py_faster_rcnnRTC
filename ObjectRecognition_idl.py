# Python stubs generated by omniidl from idl/ObjectRecognition.idl

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA

_omnipy.checkVersion(3,0, __file__)

# #include "BasicDataType.idl"
import BasicDataType_idl
_0_RTC = omniORB.openModule("RTC")
_0_RTC__POA = omniORB.openModule("RTC__POA")

#
# Start of module "ObjectRecognition"
#
__name__ = "ObjectRecognition"
_0_ObjectRecognition = omniORB.openModule("ObjectRecognition", r"idl/ObjectRecognition.idl")
_0_ObjectRecognition__POA = omniORB.openModule("ObjectRecognition__POA", r"idl/ObjectRecognition.idl")


# struct ObjectParam
_0_ObjectRecognition.ObjectParam = omniORB.newEmptyClass()
class ObjectParam (omniORB.StructBase):
    _NP_RepositoryId = "IDL:ObjectRecognition/ObjectParam:1.0"

    def __init__(self, name, width, height, x, y):
        self.name = name
        self.width = width
        self.height = height
        self.x = x
        self.y = y

_0_ObjectRecognition.ObjectParam = ObjectParam
_0_ObjectRecognition._d_ObjectParam  = (omniORB.tcInternal.tv_struct, ObjectParam, ObjectParam._NP_RepositoryId, "ObjectParam", "name", (omniORB.tcInternal.tv_string,0), "width", omniORB.tcInternal.tv_long, "height", omniORB.tcInternal.tv_long, "x", omniORB.tcInternal.tv_long, "y", omniORB.tcInternal.tv_long)
_0_ObjectRecognition._tc_ObjectParam = omniORB.tcInternal.createTypeCode(_0_ObjectRecognition._d_ObjectParam)
omniORB.registerType(ObjectParam._NP_RepositoryId, _0_ObjectRecognition._d_ObjectParam, _0_ObjectRecognition._tc_ObjectParam)
del ObjectParam

# struct TimedObjectParam
_0_ObjectRecognition.TimedObjectParam = omniORB.newEmptyClass()
class TimedObjectParam (omniORB.StructBase):
    _NP_RepositoryId = "IDL:ObjectRecognition/TimedObjectParam:1.0"

    def __init__(self, tm, data):
        self.tm = tm
        self.data = data

_0_ObjectRecognition.TimedObjectParam = TimedObjectParam
_0_ObjectRecognition._d_TimedObjectParam  = (omniORB.tcInternal.tv_struct, TimedObjectParam, TimedObjectParam._NP_RepositoryId, "TimedObjectParam", "tm", omniORB.typeMapping["IDL:RTC/Time:1.0"], "data", omniORB.typeMapping["IDL:ObjectRecognition/ObjectParam:1.0"])
_0_ObjectRecognition._tc_TimedObjectParam = omniORB.tcInternal.createTypeCode(_0_ObjectRecognition._d_TimedObjectParam)
omniORB.registerType(TimedObjectParam._NP_RepositoryId, _0_ObjectRecognition._d_TimedObjectParam, _0_ObjectRecognition._tc_TimedObjectParam)
del TimedObjectParam

# struct TimedObjectParamSeq
_0_ObjectRecognition.TimedObjectParamSeq = omniORB.newEmptyClass()
class TimedObjectParamSeq (omniORB.StructBase):
    _NP_RepositoryId = "IDL:ObjectRecognition/TimedObjectParamSeq:1.0"

    def __init__(self, tm, data):
        self.tm = tm
        self.data = data

_0_ObjectRecognition.TimedObjectParamSeq = TimedObjectParamSeq
_0_ObjectRecognition._d_TimedObjectParamSeq  = (omniORB.tcInternal.tv_struct, TimedObjectParamSeq, TimedObjectParamSeq._NP_RepositoryId, "TimedObjectParamSeq", "tm", omniORB.typeMapping["IDL:RTC/Time:1.0"], "data", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:ObjectRecognition/ObjectParam:1.0"], 0))
_0_ObjectRecognition._tc_TimedObjectParamSeq = omniORB.tcInternal.createTypeCode(_0_ObjectRecognition._d_TimedObjectParamSeq)
omniORB.registerType(TimedObjectParamSeq._NP_RepositoryId, _0_ObjectRecognition._d_TimedObjectParamSeq, _0_ObjectRecognition._tc_TimedObjectParamSeq)
del TimedObjectParamSeq

#
# End of module "ObjectRecognition"
#
__name__ = "ObjectRecognition_idl"

_exported_modules = ( "ObjectRecognition", )

# The end.
